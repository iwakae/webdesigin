@import url(common.css);

/*［セクションの書式］下余白:30px */
main article section {
  padding-bottom: 30px;
}

/*［中見出しの書式］文字色:任意、文字サイズ:18px、背景画像:bg_h2_top.png(bg_h2_bottom.png)、繰り返しなし、背景画像位置:左上(左下)、内側上下余白: 20px、内側左余白:50px、外側下余白:20px */
main article section h2 {
  color: rgb(238, 199, 142);
  font-size: 19px;
  background-image: url(../img/bg_h2_top.png), url(../img/bg_h2_bottom.png);
  background-repeat: no-repeat;
  background-position: left top, left bottom;
  padding-top: 20px;
  padding-bottom: 20px;
  padding-left: 50px;
  margin-bottom: 20px;
}

/*［"HOMEに戻る"ボタンの書式］背景色:任意、文字色:白、内側上下余白:15px、内側左右余白:25px、ブロック表示、幅:フィット、外側余白:0 auto、背景画像:arrow.png、繰り返しなし、背景画像サイズ:6px、背景画像位置:右から11px 中央 */

/* パディングは数値を２つ設定して一行にする（上下上下で時計周り） */
/* widthで最も幅が小さくなるようにする */
/* <p>タグはインライン表示なので上下余白が表示できないので、disprey:blockで改行できるようにする */
/* marginは一行表示にしたいので0とauto（左右） */

main p.homelink a {
  background-color: blue;
  color: #fff;
  padding: 15px 25px;
  display: block;
  width: fit-content;
  margin: 0 auto;
  background-image: url(../img/arrow.png);
  background-repeat: no-repeat;
  background-size: 6px;
  background-position: right 11px center;
}

/*［"HOMEに戻る"ボタンのホバー設定］不透明度:0.7 */
main p.homelink a:hover {
  opacity: 0.7;
}

/*--------------------
FlexBoxの設定
--------------------*/

/* FlexBox、横方向:均等配置 */
section.flex > div {
  padding-bottom: 20px;
  line-height: 1.5;
  display: flex;
  justify-content: space-between;
  /* 横方向の揃え方が均等配置になる */
}

/* 幅:250px */
section.flex p.left {
  background-color: bisque;
  padding: 10px;
  flex-basis: 26.6%;
}
/* レスポンシブ表示の場合は比率で表示に変更する */
/* 比率は小さい数÷大きい数×100 */

/* 幅:650px */
section.flex .right {
  background-color: aliceblue;
  padding: 10px;
  flex-basis: 69.1%;
}

/* フロート、文字との余白:15px */
section.flex .right img {
  float: right;
  padding-left: 15px;
  padding-bottom: 15px;
}
/* フロートの後ろに並ぶ */
/* 間に余白をつける */

/* フロートの解除 */
section.flex .right p:last-child {
  clear: both;
  /* ↑フロートのクリア */
  /* 最後の行だけ横並びを解除したい */
}

/* FlexBox、折り返す、横方向:均等配置、行間隔:20px */
section.list ul {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  row-gap: 20px;
}

/* 幅サイズ:460px */
section.list li {
  border: 1px solid #333;
  padding: 10px;
  line-height: 1.5;
  flex-basis: 48.9%;

  /* ギャップは間にしかつかない */
}

/*--------------------
罫線メニュー
--------------------*/
/* FlexBox */
section.menu ul {
  display: flex;
}

/* 幅比率:1 */
section.menu li {
  flex: 1;
}

/* 文字色:任意、太字、ボーダー（線幅:2px、直線、カラー:文字色と同じ）、ブロック表示、中央揃え、行の高さ:36px */
section.menu li a {
  color: #000;
  font-weight: bold;
  border-top: 2px solid #000;
  border-right: 2px solid #000;
  border-bottom: 2px solid #000;
  display: block;
  text-align: center;
  line-height: 36px;
}
/* aタグにそれぞれつける */

section.menu li:first-child a {
  border-left: 2px solid #000;
  /* 別に設定する */
  /* 左側に線をつける */
  /* ホームを消しても問題なく表示される */
}

/* 文字色:白、背景色:線カラーと同じ */
section.menu li a:hover {
  color: white;
  background-color: #000;
}

/*--------------------
絶対配置 absolute
--------------------*/
/* 絶対配置の基準（相対配置） */
section.flex {
  position: relative;
}
/* ポジションrelativeとabsoluteはセット */
/* ポジションはどうしてものときに設定する */
/* 基準は親の親でも大丈夫 */

/* 絶対配置、上:5px、右:0 */
section.flex p.homelink {
  position: absolute;
  top: 5px;
  right: 0;
}

/* レスポンシブ */
@media (max-width: 767px) {
  section.flex p.homelink {
    position: unset;
  }
}
/* 767px以下で元の位置に戻るようにする */

/* 575ｐｘ以下のレスポンシブ */
@media (max-width: 575px) {
  section.flex > div {
    display: block;
  }
  section.flex p.left {
    margin-bottom: 20px;
  }
  section.list ul {
    display: block;
  }
  section.list li {
    margin-bottom: 20px;
  }
  section.menu ul {
    display: block;
  }
  section.menu li a {
    border-top: unset;
    border-left: 2px solid #000;
  }
  section.menu li:first-child a {
    border-top: 2px solid #000;
  }
}

/* アコーディオン */
summary {
  cursor: pointer;
  margin-bottom: 10px;
}
/* カーソル表示ができるようになる */

/* テーブルタグ */
/* 表組みに線つける */
table {
  /* width: 50%; */
  border: 1px solid #000;
  border-collapse: separate;
  border-spacing: 5px;
  text-align: center;
}
/* border-collapse: separate;テーブル専用タグ */
/* border-spacing: 5px;はセル間の間隔 */
td {
  border: 1px solid #000;
  height: 40px;
  vertical-align: middle;
  width: 200px;
}
/* widthはtableかtdのどちらかにつける */

/* 見出しとその位置 */
caption {
  caption-side: bottom;
}
/* text-alignでも設定できる */

/*--------------------
transition
--------------------*/
section.transition p {
  margin-bottom: 20px;
  text-align: center;
}

/* シンプルなtransition */
p.simple a:hover {
  opacity: 0.5;
  transition: 1s;
}
/* トランジションはホバー時のみかかる */

/* ホバーから戻るときにかかる時間 */
p.simple a {
  transition: 0s;
}

/* transitionのオプション */
p.option {
  line-height: 60px;
  background-color: var(--my-color);
  transition: 0s;
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  transition-property: width;
  transition-duration: 1s;
  transition-timing-function: ease-in-out;
  transition-delay: 0.5s;
}
/* 図形と背景色がゆるやかに変わっていくアニメーション */
/* widthを変化させる場合は変化前と変化後の値を設定する */
/* widthを設定する場合は中央ぞろえのまま変化させたいときは外側余白（margin）をautoに設定しておく */

/* 1秒かけて背景色と幅の縮まった楕円の図形に変化させる */
p.option:hover {
  background-color: var(--hover-color);
  width: 50%;
  border-radius: 50%;
  transition: 1s;
}

/*--------------------
タブ切り替え
--------------------*/

/* ---------------------
①lavelタグとラジオボタンタグを設定する。
②アニメーションを行ごと変わるようにする。
③それぞれのlavelタグに背景色を設定する。
④tabに絶対配置をいれて、非表示に近い形で表示する。
⑤4の基準となる配置と内側余白をつける。
⑥divタグをクリック前は非表示に設定する。
⑥チェック時にdivタグを表示することを設定する。
⑦アニメーション表示前と後のアニメーションを設定する。
⑧ラジオボタンを非表示に設定する。
⑨クリックした時の動きのheigth（座標）を設定する。 */

section.tab ul {
  color: #fff;
  display: flex;
  text-align: center;
  gap: 10px;
  position: relative;
  padding-bottom: 100px;
}
section.tab li {
  flex: 1;
}

/* 行ごと色を変える */
section.tab label {
  display: block;
  line-height: 60px;
  cursor: pointer;
}
section.tab label[for="tab1"] {
  background-color: #000;
}

section.tab label[for="tab2"] {
  background-color: aqua;
}

section.tab label[for="tab3"] {
  background-color: blueviolet;
}
section.tab div {
  line-height: 100px;
  position: absolute;
  left: 0;
  width: 100%;
  visibility: hidden;
  opacity: 0;
  transition: 0.5s;
  height: 0;
}

section.tab input#tab1 + div {
  background-color: #000;
}

section.tab input#tab2 + div {
  background-color: aqua;
}

section.tab input#tab3 + div {
  background-color: var(--hover-color);
}
/* チェックボックスでタブ切り替え */
section.tab input[name="tab"]:checked + div {
  visibility: visible;
  opacity: 1;
  height: 100px;
}
/* ラジオボタン非表示にする */
section.tab input[name="tab"] {
  display: none;
}

/*--------------------
@keyframe
--------------------*/
section.keyframe p {
  background-color: var(--my-color);
  margin-bottom: 20px;
  text-align: center;
  line-height: 60px;
}
/* 表示時のフェードイン */
/* 何％時のフェードイン */
@keyframes fadein {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

/* アニメーションの設定 */
/* ２秒でフェードインするアニメーション */
p.fadein {
  animation: fadein 2s;
}

/* 点滅表示 */
/* フェードイン・１秒・繰り返し表示・100→0、0→100の動き・加速して減速・遅延0.5秒 */
p.blink {
  animation-name: fadein;
  animation-duration: 1s;
  animation-iteration-count: infinite;
  animation-direction: alternate-reverse;
  animation-timing-function: ease-in-out;
  animation-delay: 0.5s;
}
/* ホバーで点滅 */
/* フェードイン・遅延0.5秒・繰り返し表示・100→0、0→100・加速して減速 */
p.hoverb:hover {
  animation-name: fadein;
  animation-duration: 0.5s;
  animation-iteration-count: infinite;
  animation-direction: alternate-reverse;
  animation-timing-function: ease-in-out;
  background-color: blueviolet;
}

/* アニメーション表示を行ごとさせる */
p.hoverb label {
  display: block;
}

/* クリックで停止 */
input#stop:checked + p.hoverb {
  animation-play-state: paused;
}

input#stop {
  display: none;
}

/*--------------------
CSS変数
--------------------*/
/* お気に入りの色を設定する */
:root {
  --my-color: aquamarine;
  --hover-color: blueviolet;
}
/* background-colorにvar(--my-color)で設定できる */
